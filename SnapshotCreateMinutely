#!/bin/sh
export ETCDCTL_API=3
cd /TopStor
echo $@ > /root/Snapshotperiodcreate
cronthis='/TopStordata/cronthis.txt'
rm -rf $cronthis
leaderip=`echo $@ | awk '{print $1}'`;
every=0; ev=`echo $@ | awk '{print $4}'`; every=$(($every+$ev)) ; if (($every < 1)); then every=1; fi
keep=0; k=`echo $@ | awk '{print $5}'`; keep=$(($keep+$k)); if (($keep < 1)); then keep=1 ; fi
pDG=` echo $@ | awk '{print $2}'`; 
FileS=` echo $@ | awk '{print $3}'`;
receiver=` echo $@ | awk '{print $6}'`;
userreq=` echo $@ | awk '{print $7}'`;
docker exec etcdclient /TopStor/logqueue.py `basename "$0"` running $userreq 
DG=` echo $pDG`;
privilege="SnapShots";
contrun=`./privthis.sh $privilege $userreq`;
if [[ $contrun == 'true' ]]
then
	myhost=`docker exec etcdclient /TopStor/etcdgetlocal.py clusternode`
	myhostip=`docker exec etcdclient /TopStor/etcdgetlocal.py clusternodeip`
	leader=`docker exec etcdclient /TopStor/etcdgetlocal.py leader`
	echo $leader | grep $myhost
	if [ $? -ne 0 ];
	then
 		etcd=$myhostip
	else
 		etcd=$leaderip
 	fi


docker exec etcdclient /TopStor/logmsg.py Snap1034 info $userreq $FileS
echo $leader | grep $myhost
if [ $? -eq 0 ];
then
 stamp=`date +%s`;
else
 stamp=` echo $@ | awk '{print $7}'`;
fi
crontab -l > $cronthis
echo hihihihihihihihi
echo "*"/$every "*" "*" "*" "*" /TopStor/putcron.sh /TopStor/etcdput.py $leaderip call/$stamp /TopStor/Snapshotnowhost::$DG/$FileS::Minutely.$keep.$every.na.na::$stamp::$receiver 2> txt/err.txt >> $cronthis
crontab $cronthis
if [ $? -ne 0  ]; then
  docker exec etcdclient /TopStor/logmsg.py Snap1035 error $userreq $FileS
else 
  docker exec etcdclient /TopStor/logmsg.py Snap1036 info $userreq $Minutely.$keep.$every.na.na.$stamp $DG/$FileS
  echo /pace/etcdput.py $etcd Snapperiod/Minutely/$DG/$FileS/$stamp/$receiver  */$every%*%*%*%*%/TopStor/Snapshotnowhost%$DG/$FileS%Minutely.$keep.$every.na.na%$stamp%$receiver
  /pace/etcdput.py $leaderip Snapperiod/Minutely/$DG/$FileS/$stamp/$receiver  */$every%*%*%*%*%/TopStor/Snapshotnowhost%$DG/$FileS%Minutely.$keep.$every.na.na%$stamp%$receiver
   /pace/etcdput.py $leaderip sync/Snapperiod/____/request/$leader Snapperiod_$stamp
   /pace/etcdput.py $leaderip sync/Snapperiod/____/request Snapperiod_$stamp
fi;
fi
 docker exec etcdclient /TopStor/logqueue.py `basename "$0"` stop $userreq 
/pace/putzpool.py
