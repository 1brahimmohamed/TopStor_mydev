#!/bin/sh
export ETCDCTL_API=3
cd /TopStor
pDG=`echo $@ | awk '{print $1}'`;
DG=`echo $@ | awk -F/ '{print $1}'`;
vol=`echo $@ | awk '{print $1}'| awk -F/ '{print $2}'`;
stype=`echo $@ | awk '{print $2}' | awk -F'.' '{print $1}'`;
receiver=` echo $@ | awk '{print $NF'}`
shortreceiver=`echo $receiver | awk -F'_' '{print $1}'`
echo $pDG
leaderip=` docker exec etcdclient /TopStor/etcdgetlocal.py leaderip`
	myhost=`docker exec etcdclient /TopStor/etcdgetlocal.py clusternode`
	myhostip=`docker exec etcdclient /TopStor/etcdgetlocal.py clusternodeip`
	leader=`docker exec etcdclient /TopStor/etcdgetlocal.py leader`
	echo $leader | grep $myhost
	if [ $? -ne 0 ];
	then
 		etcd=$myhostip
	else
 		etcd=$leaderip
 	fi


userreq='system'
stamp=`date +%s`
pp=`/sbin/zpool list | grep $DG`
echo pp=$pp
echo $pp | grep $DG
if [ $? -ne 0 ]; 
then
 echo host not owner
 docker exec etcdclient /TopStor/logqueue.py `basename "$0"` stop_cancel system 
 exit
else
 docker exec etcdclient /TopStor/logqueue.py `basename "$0"` running system 
fi
echo $receiver | grep NoReceiver
if [ $? -ne 0 ];
then 
 docker exec etcdclient /TopStor/logmsg.py Replispacest01 info $userreq $vol $shortreceiver  
 echo /logmsg.py Replispacest01 info $userreq $vol $shortreceiver  
fi
res=`./Snapshotnow $leaderip $myhost $@ | awk -F'_newsnap' '{print $2}'`
echo $res | grep Erro
if [ $? -eq 0 ];
then
 exit
fi
snapshot=$res 
echo thesnaps: $snapshot , $stype
zfs set snap:type=$stype $snapshot 
echo $receiver | grep NoReceiver 
if [ $? -ne 0 ];
then 
 echo ./replicatenow.py $leaderip $etcd $snapshot $receiver
 echo $receiver | grep NoReceive
 if [ $? -eq 0 ];
 then
 	waiting=0
 else
 	waiting=1
 fi
 echo $receiver, $waiting
 while [ $waiting -eq 1 ];
 do 
  running=`./etcdget.py $leaderip running $receiver`
  echo $running | grep $receiver 
  if [ $? -eq 0 ];
  then
   echo waiting the current replications to finish
   queue=`ps -ef | grep Snapshotnow | wc -l`
   if [ $queue -ge 10 ];
   then
    stamp=`date +%s`
    ./etcddel.py $leaderip running $receiver
    ./etcdput.py $leaderip running/stub/$receiver  no
    ./etcdput.py $leaderip sync/running/____/request running_$stamp
    ./etcdput.py $leaderip sync/running/____/request/$leader running_$stamp
    exit
    waiting=0
   fi
   sleep 1
  else
   waiting=0
  fi
 done
 echo $receiver | grep NoReceive
 if [ $? -eq 0 ];
 then
  ./etcdput.py $leaderip running/$myhost/$receiver $receiver 
  ./etcdput.py $leaderip sync/running/____/request running_$stamp
  ./etcdput.py $leaderip sync/running/____/request/$leader running_$stamp
  result=`./replicatenow.py $snapshot $receiver 2>/root/replicatenow`
  echo result=$result >> /root/replicatenow
  result=`echo $result | grep 'result_' | awk -F'result_' '{print $2}'`
  echo .................................................................
  echo result=$result
  echo ............................................
  echo $result | grep 'fail'
  if [ $? -eq 0 ];
  then
   #./logmsg.py Replispacefa01 error $userreq $shortreceiver $vol
   docker exec etcdclient /TopStor/logmsg.py Streamfa01 error $userreq $vol $shortreceiver
  else
    docker exec etcdclient /TopStor/logmsg.py Replispacesu01 info $userreq $vol $shortreceiver
  fi 
 fi
 ./etcdput.py $leaderip running/$myhost/$receiver finished 
 ./etcdput.py $leaderip sync/running/____/request running_$stamp
 ./etcdput.py $leaderip sync/running/____/request/$leader running_$stamp
fi
docker exec etcdclient /TopStor/logqueue.py `basename "$0"` stop system 
