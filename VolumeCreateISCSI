#!/bin/sh
cd /TopStor
echo $@ > /root/volcreateiscsi
leaderip=`echo $@ | awk '{print $1}'`;
shortname=`echo $@ | awk '{print $3}'`;
echo $shortname | grep '_repli'
if [ $? -eq 0 ];
then
 shortname=`echo $shortname | awk -F'_repli' '{print $1}'`
 name=$shortname
else
 nameid=$RANDOM$RANDOM
 name=${shortname}_$nameid
fi
pDG=`echo $@ | awk '{print $2}'`;
quota=`echo $@ | awk '{print $4}'`;
ipaddr=`echo $@ | awk '{print $5}'`;
ipsubnet=`echo $@ | awk '{print $6}'`;
portalport=`echo $@ | awk '{print $7}'`;
targetiqn=`echo $@ | awk '{print $8}'`;
chapuser=`echo $@ | awk '{print $9}'`;
chappas=`echo $@ | awk '{print $10}'`;
active=`echo $@ | awk '{print $11}'`;
userreq=` echo $@ | awk '{print $12}'`;
DG=$pDG;
hi=`whoami`
echo start $hi $userreq > /root/volcreate
echo queuedrunning >> /root/volcreate

privilege="ISCSI";
./privthis.sh $privilege $userreq | grep true ;
if [ $? -eq 0 ];
then
	myhost=`docker exec etcdclient /TopStor/etcdgetlocal.py clusternode`
	myhostip=`docker exec etcdclient /TopStor/etcdgetlocal.py clusternodeip`
	leader=`docker exec etcdclient /TopStor/etcdgetlocal.py leader`
	echo $leader | grep $myhost
	if [ $? -ne 0 ];
	then
 		etcd=$myhostip
	else
 		etcd=$leaderip
 	fi
	docker exec etcdclient /TopStor/logqueue.py VolumeCreateISCSI running $userreq 


 echo privileged $name >> /root/volcreate
 /pace/etcdget.py $etcd volumes --prefix | grep $shortname
 if [ $? -eq 0 ];
 then
  echo here >> /root/volcreate
  docker exec etcdclient /TopStor/logmsg.py Unlin1021vv warning $userreq $shortname
  docker exec etcdclient /TopStor/logqueue.py `basename "$0"` stop_canceled $userreq 
  exit
 fi
  echo aftervolumes >> /root/volcreate
 /pace/etcdget.py $etcd usersinfo --prefix | grep $shortname
 if [ $? -eq 0 ];
 then
  echo here2 >> /root/volcreate
  docker exec etcdclient /TopStor/logmsg.py Unlin1021vu warning $userreq $shrotname
  docker exec etcdclient /TopStor/logqueue.py VolumeCreateISCSI stop_canceled $userreq 
  exit
 fi
 echo afterusersinfo >> /root/volcreate
 echo name=$name
 /sbin/zfs list | grep  "$shortname" 
 if [ $? -eq 0  ];
 then 
  docker exec etcdclient /TopStor/logmsg.py NFS1003 warning $userreq $DG/$name
 fi
 echo afterzfslist info $userreq $DG/$name >> /root/volcreate
 docker exec etcdclient /TopStor/logmsg.py NFS1004 info $userreq $DG/$name
 echo here4 >> /root/volcreate
echo  /sbin/zfs create -V $quota -o dedup=on -o compression=lz4  $DG/$name  
/sbin/zfs create -V $quota -o dedup=on -o compression=lz4  $DG/$name  
# /sbin/zfs create -o overlay=on -o acltype=posixacl -o aclinherit=passthrough -o xattr=sa -o redundant_metadata=most -o atime=off -o quota=$quota -o dedup=on -o compression=lz4  $DG/$name  
 if [ $? -ne 0 ];
 then
  echo here5 >> /root/volcreate
  docker exec etcdclient /TopStor/logmsg.py NFS1006 error $userreq $DG/$name
  docker exec etcdclient /TopStor/logqueue.py `basename "$0"` stop_canceled $userreq 
  exit
 fi
 /sbin/zfs set prot:kind=ISCSI $DG/$name
 /sbin/zfs set ip:addr=$ipaddr $DG/$name
 /sbin/zfs set ip:subnet=$ipsubnet $DG/$name
 /sbin/zfs set ip:portalport=$portalport $DG/$name
 /sbin/zfs set status:mount=$active $DG/$name
 pool=$DG
 path='/'${pool}'/'${name}
 yes | cp shareiscsi.txt /TopStordata/iscsi.${name}
 sed -i "s/Vtype/ISCSI/g"  /TopStordata/iscsi.${name}
 sed -i "s/Rpool/$pool/g"  /TopStordata/iscsi.${name}
 sed -i "s/Rname/$name/g"  /TopStordata/iscsi.${name}
 sed -i "s/Ripadd/$ipaddr/g"  /TopStordata/iscsi.${name}
 sed -i "s/Ripsub/$ipsubnet/g"  /TopStordata/iscsi.${name}
 sed -i "s/SHORTNAME/$shortname/g"  /TopStordata/iscsi.${name}
 sed -i "s/NAMEISCSI/$name/g"  /TopStordata/iscsi.${name}
 sed -i "s/POOL/$pool/g" /TopStordata/iscsi.${name}
 sed -i "s/IPADDRESS/$ipaddr/g" /TopStordata/iscsi.${name}
 sed -i "s/IPSUBNET/$ipsubnet/g" /TopStordata/iscsi.${name}
 sed -i "s/PORTALPORT/$portalport/g" /TopStordata/iscsi.${name}
 sed -i "s/TARGETIQN/$targetiqn/g" /TopStordata/iscsi.${name}
 sed -i "s/CHAPUSER/$chapuser/g" /TopStordata/iscsi.${name}
 sed -i "s/CHAPPAS/$chappas/g" /TopStordata/iscsi.${name}
 sed -i "s/ACTIVE/$active/g" /TopStordata/iscsi.${name}
 echo running iscsi.sh=$pool $name $ipaddr $ipsubnet $portalport $targetiqn $chapuser $chappas >> /root/volactivateparam
 echo running iscsi.sh=$pool $name $ipaddr $ipsubnet $portalport $targetiqn $chapuser $chappas 
 yes | cp /TopStordata/iscsi.${name} /$pool/
 zfs set status:mount=$active $pool/$name
 echo /pace/etcdput.py $leaderip volumes/ISCSI/$myhost/$DG/$name $DG/$name/$ipaddr/$ipsubnet/$portalport/$targetiqn/$chapuser/$chappas/$active >> /root/volcreate
 /pace/etcdput.py $leaderip volumes/ISCSI/$myhost/$DG/$name $DG/$name/$ipaddr/$ipsubnet/$portalport/$targetiqn/$chapuser/$chappas/$active
 echo $active | grep active
 if [ $? -eq 0 ];
 then
  zfs mount $pool/$name

  /TopStor/iscsi.py $leader $leaderip $myhost $myhostip $etcd $DG $name $ipaddr $ipsubnet ISCSI $portalport $targetiqn $chapuser $chappas
 else
  zfs unmount $pool/$name
 fi
 /pace/putzpool.py 
 docker exec etcdclient /TopStor/logmsg.py NFS1007 info $userreq $DG/$name
 echo ready ;
fi
#/TopStor/SnapshotCreateHourlytrend $DG $name 0 24 7 system 
 docker exec etcdclient /TopStor/logqueue.py `basename "$0"` stop $userreq 
