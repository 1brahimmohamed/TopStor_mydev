#!/bin/sh
cd /TopStor/
echo $@ > /root/createhourlyperiods
export ETCDCTL_API=3
cronthis='/TopStordata/cronthis.txt'
rm -rf $cronthis 2>/dev/null
leaderip=`echo $@ | awk '{print $1}'`;
min=`echo $@ | awk '{print $4}'` ;
every=0; ev=`echo $@ | awk '{print $5}'`; every=$(($every+$ev)); if (($every < 1)); then every=1; fi
keep=0; k=`echo $@ | awk '{print $6}'`; keep=$(($keep+$k)); if (($keep < 1)); then keep=1 ; fi
pDG=` echo $@ | awk '{print $2}'`; 
FileS=` echo $@ | awk '{print $3}'`;
receiver=` echo $@ | awk '{print $7}'`;
userreq=` echo $@ | awk '{print $8}'`;
txtres='/TopStordata/'`basename $0`$userreq'.txt'
rm $txtres 2>/dev/null
DG=$pDG; 
privilege="SnapShots";
contrun=`/TopStor/privthis.sh $privilege $userreq`;
if [[ $contrun == 'true' ]]
then
  docker exec etcdclient /TopStor/logqueue.py `basename "$0"` running $userreq 
  docker exec etcdclient /TopStor/logmsg.py Snap1037 info $userreq  
	myhost=`docker exec etcdclient /TopStor/etcdgetlocal.py clusternode`
	myhostip=`docker exec etcdclient /TopStor/etcdgetlocal.py clusternodeip`
	leader=`docker exec etcdclient /TopStor/etcdgetlocal.py leader`
	echo $leader | grep $myhost
	if [ $? -ne 0 ];
	then
 		etcd=$myhostip
	else
 		etcd=$leaderip
 	fi


echo $leader | grep $myhost
if [ $? -eq 0 ];
then
 stamp=`date +%s`;
else
 stamp=` echo $@ | awk '{print $7}'`;
fi
crontab -l > $cronthis
echo $min  "*"/$every "*" "*" "*"  /TopStor/Snapshotnowhost $DG/$FileS Hourly.$keep.$min.$every.na $stamp $receiver 2> txt/err.txt >> $cronthis
crontab $cronthis 2>> $txtres
err=`wc -c  $txtres | awk '{print $1}'`;
datenow=`date +%m/%d/%Y`; timenow=`date +%T`;
if [[ $err -ge  4  ]]; then
  docker exec etcdclient /TopStor/logmsg.py Snap1038 error $userreq $DG/$FileS 
else 
  docker exec etcdclient /TopStor/logmsg.py Snap1039 info $userreq  Hourly.$keep.$min.$every.$stamp $DG/$FileS
  /pace/etcdput.py $etcd Snapperiod/Hourly/$DG/$FileS/$stamp/$receiver  $min%*/$every%*%*%*%/TopStor/Snapshotnowhost%$DG/$FileS%Hourly.$keep.$min.$every.na%$stamp/$receiver
  /pace/etcdput.py $leaderip sync/Snapperiod/_____/request/$myhost Snapperiod_$stamp
  /pace/etcdput.py $leaderip sync/Snapperiod/_____/request Snapperiod_$stamp

#ETCDCTL_API=3 /TopStor/broadcast.py  PeriodManage /TopStor/etctocronlocal.sh 
fi
fi
docker exec etcdclient /TopStor/logqueue.py `basename "$0"` stop $userreq 
